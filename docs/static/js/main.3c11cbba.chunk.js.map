{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","id","Date","getTime","title","start","moment","toDate","end","add","bgcolor","notes","user","_id","name","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","logout","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","uiOpenModal","eventClearActiveEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","nowPlus1","clone","initEvent","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","eventAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c11cbba.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import moment from 'moment';\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    events: [{\n        id: new Date().getTime(),\n        title: 'Cumpleaños del jefe',\n        start: moment().toDate(),\n        end: moment().add( 2, 'hours' ).toDate(),\n        bgcolor: '#fafafa',\n        notes: 'Comprar el pastel',\n        user: {\n            _id: '123',\n            name: 'Albaro'\n        }\n    }],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n        default:\n            return state;\n    }\n\n}\n\n\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n        \n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    \n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'albaro@gmail.com',\n        lPassword: '123456'\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Daniel',\n        rEmail: 'daniel@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456'\n    });\n    \n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n        dispatch( startLogin( lEmail, lPassword ) );\n    }\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if ( rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\n        }\n        console.log('?')\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\n    }\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n            \n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import { types } from \"../types/types\";\n\n\n\nexport const eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventDeleted = () => ({ type: types.eventDeleted });\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventAddNew, eventClearActiveEvent, eventUpdated } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventUpdated( formValues ) )\n        } else {\n            dispatch( eventAddNew({\n                ...formValues,\n                id: new Date().getTime(),\n                user: {\n                    _id: '123',\n                    name: 'Albaro'\n                }\n            }) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventDeleted() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor: '#367CF7',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n  \nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth);\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}